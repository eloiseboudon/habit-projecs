"""init schema

Revision ID: c1bba60d4bb8
Revises:
Create Date: 2025-10-05 15:31:40.790090

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c1bba60d4bb8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'avatars',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('key', sa.String(length=120), nullable=False),
        sa.Column('name', sa.String(length=120), nullable=False),
        sa.Column('asset_url', sa.String(length=255), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key'),
    )
    op.create_table(
        'domains',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('key', sa.String(length=120), nullable=False),
        sa.Column('name', sa.String(length=120), nullable=False),
        sa.Column('icon', sa.String(length=255), nullable=True),
        sa.Column('order_index', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key'),
    )
    op.create_table(
        'rewards',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('key', sa.String(length=120), nullable=False),
        sa.Column('type', sa.String(length=50), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('condition_type', sa.String(length=120), nullable=False),
        sa.Column('condition_value', sa.String(length=255), nullable=True),
        sa.Column(
            'reward_data',
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
            server_default=sa.text("'{}'::jsonb"),
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key', name='uq_reward_key'),
    )
    op.alter_column(
        'rewards',
        'reward_data',
        server_default=None,
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
    )
    op.create_table(
        'users',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('password_hash', sa.String(length=255), nullable=False),
        sa.Column('display_name', sa.String(length=120), nullable=False),
        sa.Column('timezone', sa.String(length=64), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
    )
    op.create_table(
        'challenges',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('domain_id', sa.Integer(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('target_points', sa.Integer(), nullable=False),
        sa.Column('xp_reward', sa.Integer(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'consents',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('type', sa.String(length=50), nullable=False),
        sa.Column('version', sa.String(length=50), nullable=False),
        sa.Column(
            'accepted_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'progress_snapshots',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('domain_id', sa.Integer(), nullable=False),
        sa.Column(
            'period',
            sa.Enum('DAY', 'WEEK', 'MONTH', name='snapshotperiod'),
            nullable=False,
        ),
        sa.Column('period_start_date', sa.Date(), nullable=False),
        sa.Column('points_total', sa.Integer(), nullable=False),
        sa.Column('xp_total', sa.Integer(), nullable=False),
        sa.Column(
            'computed_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint(
            'user_id',
            'domain_id',
            'period',
            'period_start_date',
            name='uq_progress_snapshot',
        ),
    )
    op.create_table(
        'streaks',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('domain_id', sa.Integer(), nullable=False),
        sa.Column('current_streak_days', sa.Integer(), nullable=False),
        sa.Column('best_streak_days', sa.Integer(), nullable=False),
        sa.Column('last_activity_date', sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id', 'domain_id', name='uq_streak'),
    )
    op.create_table(
        'task_templates',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('domain_id', sa.Integer(), nullable=False),
        sa.Column('default_xp', sa.Integer(), nullable=False),
        sa.Column('default_points', sa.Integer(), nullable=False),
        sa.Column('unit', sa.String(length=30), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'user_avatar',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('avatar_id', sa.Integer(), nullable=False),
        sa.Column('color_theme', sa.String(length=50), nullable=True),
        sa.Column(
            'equipped_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['avatar_id'], ['avatars.id'], ondelete='RESTRICT'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id'),
    )
    op.create_table(
        'user_domain_settings',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('domain_id', sa.Integer(), nullable=False),
        sa.Column('weekly_target_points', sa.Integer(), nullable=False),
        sa.Column('is_enabled', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id', 'domain_id', name='uq_user_domain'),
    )
    op.create_table(
        'user_level',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('current_level', sa.Integer(), nullable=False),
        sa.Column('current_xp', sa.Integer(), nullable=False),
        sa.Column('xp_to_next', sa.Integer(), nullable=False),
        sa.Column(
            'last_update_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id'),
    )
    op.create_table(
        'user_rewards',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('reward_id', sa.Integer(), nullable=False),
        sa.Column(
            'date_obtained',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column('seen', sa.Boolean(), nullable=False, server_default=sa.text('false')),
        sa.ForeignKeyConstraint(['reward_id'], ['rewards.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id', 'reward_id'),
    )
    op.alter_column('user_rewards', 'seen', server_default=None)
    op.create_table(
        'user_cosmetics',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('item_key', sa.String(length=120), nullable=False),
        sa.Column('equipped', sa.Boolean(), nullable=False, server_default=sa.text('false')),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id', 'item_key'),
    )
    op.alter_column('user_cosmetics', 'equipped', server_default=None)
    op.create_table(
        'user_settings',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('language', sa.String(length=10), nullable=False),
        sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
        sa.Column('first_day_of_week', sa.Integer(), nullable=False),
        sa.Column('avatar_type', sa.String(length=30), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id'),
    )
    op.create_table(
        'xp_events',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('domain_id', sa.Integer(), nullable=True),
        sa.Column(
            'source_type',
            sa.Enum('TASK_LOG', 'CHALLENGE', 'BONUS', name='sourcetype'),
            nullable=False,
        ),
        sa.Column('source_id', sa.UUID(), nullable=True),
        sa.Column('delta_xp', sa.Integer(), nullable=False),
        sa.Column(
            'occurred_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'ix_xp_events_user_occurred',
        'xp_events',
        ['user_id', 'occurred_at'],
        unique=False,
    )
    op.create_table(
        'user_challenges',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('challenge_id', sa.Integer(), nullable=False),
        sa.Column('progress_points', sa.Integer(), nullable=False),
        sa.Column(
            'status',
            sa.Enum('ACTIVE', 'COMPLETED', 'EXPIRED', name='challengestatus'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['challenge_id'], ['challenges.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id', 'challenge_id', name='uq_user_challenge'),
    )
    op.create_table(
        'user_tasks',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('template_id', sa.Integer(), nullable=True),
        sa.Column('custom_title', sa.String(length=255), nullable=True),
        sa.Column('custom_xp', sa.Integer(), nullable=True),
        sa.Column('custom_points', sa.Integer(), nullable=True),
        sa.Column('domain_id', sa.Integer(), nullable=False),
        sa.Column('is_favorite', sa.Boolean(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column(
            'schedule_period',
            sa.Enum('DAY', 'WEEK', 'MONTH', name='snapshotperiod'),
            server_default='DAY',
            nullable=False,
        ),
        sa.Column(
            'schedule_interval', sa.Integer(), server_default='1', nullable=False
        ),
        sa.Column('frequency_type', sa.String(length=20), nullable=False),
        sa.Column('target_occurrences', sa.Integer(), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['template_id'], ['task_templates.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id', 'id', name='uq_user_task_id'),
    )
    op.create_index(
        'ix_user_tasks_user_is_favorite',
        'user_tasks',
        ['user_id', 'is_favorite'],
        unique=False,
    )
    op.create_table(
        'task_logs',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('user_task_id', sa.UUID(), nullable=True),
        sa.Column('domain_id', sa.Integer(), nullable=False),
        sa.Column(
            'occurred_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('unit', sa.String(length=30), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('xp_awarded', sa.Integer(), nullable=False),
        sa.Column('points_awarded', sa.Integer(), nullable=False),
        sa.Column('source', sa.String(length=50), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['user_task_id'], ['user_tasks.id'], ondelete='SET NULL'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'ix_task_logs_user_domain_occurred',
        'task_logs',
        ['user_id', 'domain_id', 'occurred_at'],
        unique=False,
    )
    op.create_index(
        'ix_task_logs_user_occurred',
        'task_logs',
        ['user_id', 'occurred_at'],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_task_logs_user_occurred', table_name='task_logs')
    op.drop_index('ix_task_logs_user_domain_occurred', table_name='task_logs')
    op.drop_table('task_logs')
    op.drop_index('ix_user_tasks_user_is_favorite', table_name='user_tasks')
    op.drop_table('user_tasks')
    op.drop_table('user_challenges')
    op.drop_index('ix_xp_events_user_occurred', table_name='xp_events')
    op.drop_table('xp_events')
    op.drop_table('user_settings')
    op.drop_table('user_cosmetics')
    op.drop_table('user_rewards')
    op.drop_table('user_level')
    op.drop_table('user_domain_settings')
    op.drop_table('user_avatar')
    op.drop_table('task_templates')
    op.drop_table('streaks')
    op.drop_table('progress_snapshots')
    op.drop_table('consents')
    op.drop_table('challenges')
    op.drop_table('users')
    op.drop_table('rewards')
    op.drop_table('domains')
    op.drop_table('avatars')
    # ### end Alembic commands ###
